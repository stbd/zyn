---
- hosts: localhost
  tasks:
    - name: "Install packages"
      become: yes
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - 'build-essential'
          - 'haveged'            # Used to generate randomness for security operations
          - 'python3'
          - 'python3-pip'
          - 'shellcheck'         # Static analyser for bash scripts
          - 'curl'
          - 'gnupg2'
          - 'gnupg-agent'        # https://unix.stackexchange.com/questions/512173/gpg-gpg-preset-passphrase-installation
          - 'apt-transport-https'
          - 'software-properties-common'
          - 'ssl-cert'

    - name: "Create symlinks to scripts"
      become: yes
      shell: |
        for file in files/*sh; do
            path_file=$(readlink -f "$file")
            link=/usr/bin/$(basename "$file")
            if [ ! -e "$link" ]; then
                ln -s "$path_file" "$link"
            fi
        done

    - name: "Install Rust"
      shell: "/usr/bin/zyn-install-rust-debian.sh"
      args:
        creates: "/home/vagrant/.cargo/bin/rustup"

    - name: "Init home"
      shell: "/zyn/vm/development/files/zyn-prepare-home.sh /home/vagrant"

    - name: "Configure encryption"
      become: yes
      become_user: vagrant
      shell: "/zyn/vm/development/files/zyn-prepare-encryption-keys.sh"

    # Certificates are not used in development at the moment, disable for now
    #- name: "Configure certificates"
    #  become: yes
    #  script: "/zyn/vm/development/files/zyn-prepare-certificates.sh"

    - name: "Install Docker"
      become: yes
      shell: |
        #!/usr/bin/env bash
        set -eu
        is_installed=1
        which docker || is_installed=0
        if [ $is_installed -eq 1 ]; then
            echo "Docker already installed"
            exit 0
        fi
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
        apt-get update
        apt-get -y install docker-ce
      args:
        creates: "/usr/bin/docker"

    - name: "Install Python Zyn library"
      become: yes
      shell: pip3 install --break-system-packages -e /zyn/py
      args:
        creates: "/usr/local/bin/zyn-cli"

    - name: "Install Python test dependecies"
      become: yes
      shell: pip3 install --break-system-packages -r /zyn/tests/requirements.txt
      args:
        creates: "/usr/local/bin/pytest"

    - name: "Configure developer user"
      become: yes
      user:
        name: vagrant
        append: yes
        groups:
          - 'sudo'
          - 'docker'
          - 'ssl-cert'

    - name: "Create data directory"
      become: yes
      shell: |
        mkdir -p /data/server
        mkdir -p /data/client
        chown -R vagrant:vagrant /data

    - name: "Prepare Node environment"
      block:
        - name: "Make direcotry for modules"
          become: yes
          file:
            path: "/node-modules"
            owner: vagrant
            group: vagrant
            state: directory

        - name: "Mount modules directory to repo workdir with bashrc"
          become: yes
          shell: |
            tag=ZYN_NODEMODULES
            sed -i "/$tag/,/$tag/d" /home/vagrant/.bashrc

            cat <<EOF >> /home/vagrant/.bashrc
            # $tag
            node_modules_mounted=1
            path_zyn_node_modules=/zyn/js/node_modules
            mount | grep -q "\$path_zyn_node_modules" || node_modules_mounted=0
            if [ \$node_modules_mounted -eq 0 ]; then
                echo "Mounting node modules to \$path_zyn_node_modules"
                sudo mount --bind /node-modules/ "\$path_zyn_node_modules"
            fi
            # /$tag
            EOF
